// Generated by gencpp from file calib_fusion_2d/laserWheelCalib.msg
// DO NOT EDIT!


#ifndef CALIB_FUSION_2D_MESSAGE_LASERWHEELCALIB_H
#define CALIB_FUSION_2D_MESSAGE_LASERWHEELCALIB_H

#include <ros/service_traits.h>

#include "laserWheelCalibRequest.h"
#include "laserWheelCalibResponse.h"


namespace calib_fusion_2d
{

struct laserWheelCalib
{

typedef laserWheelCalibRequest Request;
typedef laserWheelCalibResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct laserWheelCalib
} // namespace calib_fusion_2d


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::calib_fusion_2d::laserWheelCalib > {
  static const char* value()
  {
    return "90e1cd2dcff08697e0685ac55e73a4f3";
  }

  static const char* value(const ::calib_fusion_2d::laserWheelCalib&) { return value(); }
};

template<>
struct DataType< ::calib_fusion_2d::laserWheelCalib > {
  static const char* value()
  {
    return "calib_fusion_2d/laserWheelCalib";
  }

  static const char* value(const ::calib_fusion_2d::laserWheelCalib&) { return value(); }
};


// service_traits::MD5Sum< ::calib_fusion_2d::laserWheelCalibRequest> should match
// service_traits::MD5Sum< ::calib_fusion_2d::laserWheelCalib >
template<>
struct MD5Sum< ::calib_fusion_2d::laserWheelCalibRequest>
{
  static const char* value()
  {
    return MD5Sum< ::calib_fusion_2d::laserWheelCalib >::value();
  }
  static const char* value(const ::calib_fusion_2d::laserWheelCalibRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::calib_fusion_2d::laserWheelCalibRequest> should match
// service_traits::DataType< ::calib_fusion_2d::laserWheelCalib >
template<>
struct DataType< ::calib_fusion_2d::laserWheelCalibRequest>
{
  static const char* value()
  {
    return DataType< ::calib_fusion_2d::laserWheelCalib >::value();
  }
  static const char* value(const ::calib_fusion_2d::laserWheelCalibRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::calib_fusion_2d::laserWheelCalibResponse> should match
// service_traits::MD5Sum< ::calib_fusion_2d::laserWheelCalib >
template<>
struct MD5Sum< ::calib_fusion_2d::laserWheelCalibResponse>
{
  static const char* value()
  {
    return MD5Sum< ::calib_fusion_2d::laserWheelCalib >::value();
  }
  static const char* value(const ::calib_fusion_2d::laserWheelCalibResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::calib_fusion_2d::laserWheelCalibResponse> should match
// service_traits::DataType< ::calib_fusion_2d::laserWheelCalib >
template<>
struct DataType< ::calib_fusion_2d::laserWheelCalibResponse>
{
  static const char* value()
  {
    return DataType< ::calib_fusion_2d::laserWheelCalib >::value();
  }
  static const char* value(const ::calib_fusion_2d::laserWheelCalibResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // CALIB_FUSION_2D_MESSAGE_LASERWHEELCALIB_H
